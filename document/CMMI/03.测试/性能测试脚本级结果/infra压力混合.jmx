<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables 105网段" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p1" elementType="Argument">
            <stringProp name="Argument.name">p1</stringProp>
            <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p2" elementType="Argument">
            <stringProp name="Argument.name">p2</stringProp>
            <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p3" elementType="Argument">
            <stringProp name="Argument.name">p3</stringProp>
            <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="c1" elementType="Argument">
            <stringProp name="Argument.name">c1</stringProp>
            <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="c2" elementType="Argument">
            <stringProp name="Argument.name">c2</stringProp>
            <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="c3" elementType="Argument">
            <stringProp name="Argument.name">c3</stringProp>
            <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="c4" elementType="Argument">
            <stringProp name="Argument.name">c4</stringProp>
            <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o1" elementType="Argument">
            <stringProp name="Argument.name">o1</stringProp>
            <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o2" elementType="Argument">
            <stringProp name="Argument.name">o2</stringProp>
            <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o3" elementType="Argument">
            <stringProp name="Argument.name">o3</stringProp>
            <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o4" elementType="Argument">
            <stringProp name="Argument.name">o4</stringProp>
            <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o5" elementType="Argument">
            <stringProp name="Argument.name">o5</stringProp>
            <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o6" elementType="Argument">
            <stringProp name="Argument.name">o6</stringProp>
            <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o7" elementType="Argument">
            <stringProp name="Argument.name">o7</stringProp>
            <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o8" elementType="Argument">
            <stringProp name="Argument.name">o8</stringProp>
            <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o9" elementType="Argument">
            <stringProp name="Argument.name">o9</stringProp>
            <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o10" elementType="Argument">
            <stringProp name="Argument.name">o10</stringProp>
            <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o11" elementType="Argument">
            <stringProp name="Argument.name">o11</stringProp>
            <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o12" elementType="Argument">
            <stringProp name="Argument.name">o12</stringProp>
            <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o13" elementType="Argument">
            <stringProp name="Argument.name">o13</stringProp>
            <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o14" elementType="Argument">
            <stringProp name="Argument.name">o14</stringProp>
            <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="o15" elementType="Argument">
            <stringProp name="Argument.name">o15</stringProp>
            <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="uuv_host" elementType="Argument">
            <stringProp name="Argument.name">uuv_host</stringProp>
            <stringProp name="Argument.value">192.168.105.120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="uuv_port" elementType="Argument">
            <stringProp name="Argument.name">uuv_port</stringProp>
            <stringProp name="Argument.value">9101</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="uba_host" elementType="Argument">
            <stringProp name="Argument.name">uba_host</stringProp>
            <stringProp name="Argument.value">192.168.105.120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="uba_port" elementType="Argument">
            <stringProp name="Argument.name">uba_port</stringProp>
            <stringProp name="Argument.value">9103</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="log_host" elementType="Argument">
            <stringProp name="Argument.name">log_host</stringProp>
            <stringProp name="Argument.value">192.168.105.120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="log_port" elementType="Argument">
            <stringProp name="Argument.name">log_port</stringProp>
            <stringProp name="Argument.value">9102</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency业务分组" enabled="false">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">1000</stringProp>
        <stringProp name="RampUp">60</stringProp>
        <stringProp name="Steps">1000</stringProp>
        <stringProp name="Hold">900</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">S</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">100</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">percentage</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="10%登录 " enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;0 &amp;&amp; ${percentage}&lt;=10,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">username.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames">username</stringProp>
            </CSVDataSet>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="10%获取用户详情" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;10 &amp;&amp; ${percentage}&lt;=20,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">username2.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">user_code</stringProp>
            </CSVDataSet>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="6%修改密码" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;20 &amp;&amp; ${percentage}&lt;=26,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="7%批量获取用户详情" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;26 &amp;&amp; ${percentage}&lt;=33,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="12%获取用户功能权限" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;33 &amp;&amp; ${percentage}&lt;=45,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="9%获取用户数据权限" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;45 &amp;&amp; ${percentage}&lt;=54,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="8%获取组织架构" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;54 &amp;&amp; ${percentage}&lt;=62,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;1&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;10&quot;,&quot;11&quot;,&quot;12&quot;,&quot;13&quot;,&quot;14&quot;,&quot;15&quot;,&quot;16&quot;,&quot;17&quot;,&quot;18&quot;,&quot;19&quot;,&quot;20&quot;,&quot;21&quot;,&quot;22&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;,&quot;26&quot;,&quot;27&quot;,&quot;28&quot;,&quot;29&quot;,&quot;30&quot;,&quot;31&quot;,&quot;32&quot;,&quot;33&quot;,&quot;34&quot;,&quot;35&quot;,&quot;36&quot;,&quot;37&quot;,&quot;38&quot;,&quot;39&quot;,&quot;40&quot;,&quot;41&quot;,&quot;42&quot;,&quot;43&quot;,&quot;44&quot;,&quot;45&quot;,&quot;46&quot;,&quot;47&quot;,&quot;48&quot;,&quot;49&quot;,&quot;50&quot;,&quot;51&quot;,&quot;52&quot;,&quot;53&quot;,&quot;54&quot;,&quot;55&quot;,&quot;56&quot;,&quot;57&quot;,&quot;58&quot;,&quot;59&quot;,&quot;60&quot;,&quot;61&quot;,&quot;62&quot;,&quot;63&quot;,&quot;64&quot;,&quot;65&quot;,&quot;66&quot;,&quot;67&quot;,&quot;68&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="18%采集用户行为" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;62 &amp;&amp; ${percentage}&lt;=80,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
              <stringProp name="filename">userBehaviorRule.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="variableNames">appname,appcode</stringProp>
              <boolProp name="randomOrder">true</boolProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="rewindOnTheEndOfList">true</boolProp>
              <boolProp name="independentListPerThread">false</boolProp>
            </com.blazemeter.jmeter.RandomCSVDataSetConfig>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="5%用户菜单偏好" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;80 &amp;&amp; ${percentage}&lt;=85,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="15%新增操作日志" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;85 &amp;&amp; ${percentage}&lt;=100,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
            <stringProp name="HTTPSampler.port">${log_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">infra</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">PT20181203-400user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\test\Desktop\3000minx_noupdatepasswd</stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesDistributionGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Distribution" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">100</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TimesVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times vs Threads" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="counter业务分组" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">800</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">100</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">percentage</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="10%登录 " enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;0 &amp;&amp; ${percentage}&lt;=10,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">username.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames">username</stringProp>
            </CSVDataSet>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="10%获取用户详情" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;10 &amp;&amp; ${percentage}&lt;=20,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">username2.csv</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">user_code</stringProp>
            </CSVDataSet>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="6%修改密码" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;20 &amp;&amp; ${percentage}&lt;=26,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="7%批量获取用户详情" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;26 &amp;&amp; ${percentage}&lt;=33,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="12%获取用户功能权限" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;33 &amp;&amp; ${percentage}&lt;=45,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="9%获取用户数据权限" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;45 &amp;&amp; ${percentage}&lt;=54,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="8%获取组织架构" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;54 &amp;&amp; ${percentage}&lt;=62,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;1&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;10&quot;,&quot;11&quot;,&quot;12&quot;,&quot;13&quot;,&quot;14&quot;,&quot;15&quot;,&quot;16&quot;,&quot;17&quot;,&quot;18&quot;,&quot;19&quot;,&quot;20&quot;,&quot;21&quot;,&quot;22&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;,&quot;26&quot;,&quot;27&quot;,&quot;28&quot;,&quot;29&quot;,&quot;30&quot;,&quot;31&quot;,&quot;32&quot;,&quot;33&quot;,&quot;34&quot;,&quot;35&quot;,&quot;36&quot;,&quot;37&quot;,&quot;38&quot;,&quot;39&quot;,&quot;40&quot;,&quot;41&quot;,&quot;42&quot;,&quot;43&quot;,&quot;44&quot;,&quot;45&quot;,&quot;46&quot;,&quot;47&quot;,&quot;48&quot;,&quot;49&quot;,&quot;50&quot;,&quot;51&quot;,&quot;52&quot;,&quot;53&quot;,&quot;54&quot;,&quot;55&quot;,&quot;56&quot;,&quot;57&quot;,&quot;58&quot;,&quot;59&quot;,&quot;60&quot;,&quot;61&quot;,&quot;62&quot;,&quot;63&quot;,&quot;64&quot;,&quot;65&quot;,&quot;66&quot;,&quot;67&quot;,&quot;68&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="18%采集用户行为" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;62 &amp;&amp; ${percentage}&lt;=80,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
              <stringProp name="filename">userBehaviorRule.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="variableNames">appname,appcode</stringProp>
              <boolProp name="randomOrder">true</boolProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <boolProp name="rewindOnTheEndOfList">true</boolProp>
              <boolProp name="independentListPerThread">false</boolProp>
            </com.blazemeter.jmeter.RandomCSVDataSetConfig>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="5%用户菜单偏好" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;80 &amp;&amp; ${percentage}&lt;=85,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
            <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="15%新增操作日志" enabled="true">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;85 &amp;&amp; ${percentage}&lt;=100,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
            <stringProp name="HTTPSampler.port">${log_port}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
                </elementProp>
                <elementProp name="Us-App&#x9;source" elementType="Header">
                  <stringProp name="Header.name">Us-App	source</stringProp>
                  <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">infra</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">PT20181203-400user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\test\Downloads\apache-jmeter-5.0\bin\800minx</stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesDistributionGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Distribution" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">100</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TimesVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times vs Threads" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g01" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
          <collectionProp name="-2081808454">
            <stringProp name="100">100</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-2081808454">
            <stringProp name="100">100</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-2081808454">
            <stringProp name="100">100</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-2081808454">
            <stringProp name="100">100</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-2081808454">
            <stringProp name="100">100</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-2081808454">
            <stringProp name="100">100</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="60">60</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g02" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g03" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g04" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g05" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g06" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g07" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g08" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g09" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="g10" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1060534671">
            <stringProp name="49">1</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="56313">900</stringProp>
            <stringProp name="48">0</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组01" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组02" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">40</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组03" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">24</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="false">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组04" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">28</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组05" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">48</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组06" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">36</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;1&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;10&quot;,&quot;11&quot;,&quot;12&quot;,&quot;13&quot;,&quot;14&quot;,&quot;15&quot;,&quot;16&quot;,&quot;17&quot;,&quot;18&quot;,&quot;19&quot;,&quot;20&quot;,&quot;21&quot;,&quot;22&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;,&quot;26&quot;,&quot;27&quot;,&quot;28&quot;,&quot;29&quot;,&quot;30&quot;,&quot;31&quot;,&quot;32&quot;,&quot;33&quot;,&quot;34&quot;,&quot;35&quot;,&quot;36&quot;,&quot;37&quot;,&quot;38&quot;,&quot;39&quot;,&quot;40&quot;,&quot;41&quot;,&quot;42&quot;,&quot;43&quot;,&quot;44&quot;,&quot;45&quot;,&quot;46&quot;,&quot;47&quot;,&quot;48&quot;,&quot;49&quot;,&quot;50&quot;,&quot;51&quot;,&quot;52&quot;,&quot;53&quot;,&quot;54&quot;,&quot;55&quot;,&quot;56&quot;,&quot;57&quot;,&quot;58&quot;,&quot;59&quot;,&quot;60&quot;,&quot;61&quot;,&quot;62&quot;,&quot;63&quot;,&quot;64&quot;,&quot;65&quot;,&quot;66&quot;,&quot;67&quot;,&quot;68&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组07" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">32</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组08" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">72</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组09" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户数量分组10" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">60</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;2114&quot;,&quot;2115&quot;,&quot;2116&quot;,&quot;2117&quot;,&quot;2118&quot;,&quot;2119&quot;,&quot;2120&quot;,&quot;2121&quot;,&quot;2122&quot;,&quot;2123&quot;,&quot;2124&quot;,&quot;2125&quot;,&quot;2126&quot;,&quot;2127&quot;,&quot;2128&quot;,&quot;2129&quot;,&quot;2130&quot;,&quot;2131&quot;,&quot;2132&quot;,&quot;2133&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">PT20181112-10user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">Test name</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="普通功能" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="false">
          <stringProp name="maximumValue">100</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">false</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">percentage</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables 111网段" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.111.253</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">9180</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.111.253</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">9103</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.111.253</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">9102</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">usercode:kf8350&amp;username:oupeng</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Us-App</stringProp>
              <stringProp name="Header.value">source:performanceTest&amp;version:2.0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="p1" elementType="Argument">
              <stringProp name="Argument.name">p1</stringProp>
              <stringProp name="Argument.value">&quot;警察&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p2" elementType="Argument">
              <stringProp name="Argument.name">p2</stringProp>
              <stringProp name="Argument.value">&quot;普通警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="p3" elementType="Argument">
              <stringProp name="Argument.name">p3</stringProp>
              <stringProp name="Argument.value">&quot;巡逻警员&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c1" elementType="Argument">
              <stringProp name="Argument.name">c1</stringProp>
              <stringProp name="Argument.value">&quot;交警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c2" elementType="Argument">
              <stringProp name="Argument.name">c2</stringProp>
              <stringProp name="Argument.value">&quot;刑警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c3" elementType="Argument">
              <stringProp name="Argument.name">c3</stringProp>
              <stringProp name="Argument.value">&quot;特警&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="c4" elementType="Argument">
              <stringProp name="Argument.name">c4</stringProp>
              <stringProp name="Argument.value">&quot;消防&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o1" elementType="Argument">
              <stringProp name="Argument.name">o1</stringProp>
              <stringProp name="Argument.value">&quot;2114&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o2" elementType="Argument">
              <stringProp name="Argument.name">o2</stringProp>
              <stringProp name="Argument.value">&quot;2115&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o3" elementType="Argument">
              <stringProp name="Argument.name">o3</stringProp>
              <stringProp name="Argument.value">&quot;2116&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o4" elementType="Argument">
              <stringProp name="Argument.name">o4</stringProp>
              <stringProp name="Argument.value">&quot;2117&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o5" elementType="Argument">
              <stringProp name="Argument.name">o5</stringProp>
              <stringProp name="Argument.value">&quot;2118&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o6" elementType="Argument">
              <stringProp name="Argument.name">o6</stringProp>
              <stringProp name="Argument.value">&quot;2119&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o7" elementType="Argument">
              <stringProp name="Argument.name">o7</stringProp>
              <stringProp name="Argument.value">&quot;2120&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o8" elementType="Argument">
              <stringProp name="Argument.name">o8</stringProp>
              <stringProp name="Argument.value">&quot;2121&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o9" elementType="Argument">
              <stringProp name="Argument.name">o9</stringProp>
              <stringProp name="Argument.value">&quot;2122&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o10" elementType="Argument">
              <stringProp name="Argument.name">o10</stringProp>
              <stringProp name="Argument.value">&quot;2123&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o11" elementType="Argument">
              <stringProp name="Argument.name">o11</stringProp>
              <stringProp name="Argument.value">&quot;2124&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o12" elementType="Argument">
              <stringProp name="Argument.name">o12</stringProp>
              <stringProp name="Argument.value">&quot;2125&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o13" elementType="Argument">
              <stringProp name="Argument.name">o13</stringProp>
              <stringProp name="Argument.value">&quot;2126&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o14" elementType="Argument">
              <stringProp name="Argument.name">o14</stringProp>
              <stringProp name="Argument.value">&quot;2127&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="o15" elementType="Argument">
              <stringProp name="Argument.name">o15</stringProp>
              <stringProp name="Argument.value">&quot;2128&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_host" elementType="Argument">
              <stringProp name="Argument.name">uuv_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uuv_port" elementType="Argument">
              <stringProp name="Argument.name">uuv_port</stringProp>
              <stringProp name="Argument.value">8089</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_host" elementType="Argument">
              <stringProp name="Argument.name">uba_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="uba_port" elementType="Argument">
              <stringProp name="Argument.name">uba_port</stringProp>
              <stringProp name="Argument.value">8085</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_host" elementType="Argument">
              <stringProp name="Argument.name">log_host</stringProp>
              <stringProp name="Argument.value">192.168.108.37</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="log_port" elementType="Argument">
              <stringProp name="Argument.name">log_port</stringProp>
              <stringProp name="Argument.value">8081</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01登录" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;user_code&quot;: &quot;${username}&quot;, &quot;password&quot;: &quot;e10adc3949ba59abbe56e057f20f883e&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">username</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02获取用户详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">username2.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">user_code</stringProp>
          </CSVDataSet>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03修改密码" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;old_password&quot;: &quot;123456&quot;, &quot;new_password&quot;: &quot;123456&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/${user_code}/update-password</stringProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;user_code&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${user_code}&amp;username:${user_code}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04批量获取用户详情" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/batch/${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();
int numOfUser=r.nextInt(100);
vars.put(&quot;numOfUser&quot;,numOfUser+&quot;&quot;);
String userCodeString=&quot;&quot;;
for(int i=0;i&lt;numOfUser;i++){
	number = r.nextInt(49999);
	DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
	number1=df.format(number);
	userCodeString=userCodeString+&quot;perftest&quot;+number1+&quot;,&quot;;
}
//userCodeString = userCodeString.toString();
userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
//userCodeString = userCodeString.substring(0,userCodeString.length - 1);
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05获取用户功能权限" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-menus?app_code=${appcode}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
n=r.nextInt(alist.length);
app=alist[n];
vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;000000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10获取用户数据权限" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/users/privilege-resources</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

//String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;};
//n=r.nextInt(alist.length);
//app=alist[n];
//vars.put(&quot;appcode&quot;,app);

String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="06获取组织架构" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uuv_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uuv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uuv/v0.1/organizations/${org_id}/childs-tree?path=${bloon}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;1&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;10&quot;,&quot;11&quot;,&quot;12&quot;,&quot;13&quot;,&quot;14&quot;,&quot;15&quot;,&quot;16&quot;,&quot;17&quot;,&quot;18&quot;,&quot;19&quot;,&quot;20&quot;,&quot;21&quot;,&quot;22&quot;,&quot;23&quot;,&quot;24&quot;,&quot;25&quot;,&quot;26&quot;,&quot;27&quot;,&quot;28&quot;,&quot;29&quot;,&quot;30&quot;,&quot;31&quot;,&quot;32&quot;,&quot;33&quot;,&quot;34&quot;,&quot;35&quot;,&quot;36&quot;,&quot;37&quot;,&quot;38&quot;,&quot;39&quot;,&quot;40&quot;,&quot;41&quot;,&quot;42&quot;,&quot;43&quot;,&quot;44&quot;,&quot;45&quot;,&quot;46&quot;,&quot;47&quot;,&quot;48&quot;,&quot;49&quot;,&quot;50&quot;,&quot;51&quot;,&quot;52&quot;,&quot;53&quot;,&quot;54&quot;,&quot;55&quot;,&quot;56&quot;,&quot;57&quot;,&quot;58&quot;,&quot;59&quot;,&quot;60&quot;,&quot;61&quot;,&quot;62&quot;,&quot;63&quot;,&quot;64&quot;,&quot;65&quot;,&quot;66&quot;,&quot;67&quot;,&quot;68&quot;};
n=r.nextInt(alist.length);
org=alist[n];
vars.put(&quot;org_id&quot;,org);



String [] blist={&quot;true&quot;,&quot;false&quot;};
n=r.nextInt(blist.length);
app=blist[n];
vars.put(&quot;bloon&quot;,app);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07采集用户行为" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;event_code&quot;: &quot;${appcode}&quot;, &quot;event_name&quot;: &quot;${appname}&quot;, &quot;page_code&quot;: &quot;&quot;, &quot;page_name&quot;: &quot;&quot;, &quot;menu_code&quot;: &quot;performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/APP0005/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="bzm - Random CSV Data Set Config" enabled="true">
            <stringProp name="filename">userBehaviorRule.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">appname,appcode</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="08用户菜单偏好" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${uba_host}</stringProp>
          <stringProp name="HTTPSampler.port">${uba_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-uba/v0.1/user-behaviors/${app_code}/click-volume?start_date=${__RandomDate(yyyy-MM-dd,2018-10-01,2018-10-31,,)}&amp;end_date=${__RandomDate(yyyy-MM-dd,2018-11-01,${__time(yyyy-MM-dd,)},,)}&amp;user_code=${username}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="09新增操作日志" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;source&quot;: &quot;uuv&quot;, &quot;version&quot;: &quot;v2&quot;, &quot;module&quot;: &quot;performanceTest&quot;, &quot;action&quot;: &quot;performanceTest&quot;, &quot;level&quot;: &quot;4&quot;, &quot;user_code&quot;: &quot;${username}&quot;, &quot;user_name&quot;: &quot;${username}&quot;, &quot;client_ip&quot;: &quot;192.168.108.94&quot;, &quot;server_ip&quot;: &quot;192.168.108.37&quot;, &quot;details&quot;: &quot;performanceTest&quot;, &quot;start_time&quot;: &quot;${__time(,)}&quot;, &quot;trace_id&quot;: &quot;performanceTest&quot;,&quot;message&quot;:&quot;this is for performanceTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${log_host}</stringProp>
          <stringProp name="HTTPSampler.port">${log_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/infra-log/v0.1/operation-log</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">usercode:${username}&amp;username:${username}</stringProp>
              </elementProp>
              <elementProp name="Us-App&#x9;source" elementType="Header">
                <stringProp name="Header.name">Us-App	source</stringProp>
                <stringProp name="Header.value">performanceTest&amp;version:2.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.DecimalFormat;
import java.lang.String;

Random r=new Random();

String [] alist={&quot;APP0008&quot;,&quot;APP0009&quot;,&quot;APP0007&quot;,&quot;APP0005&quot;,&quot;APP0012&quot;,&quot;APP0001&quot;,&quot;APP0004&quot;,&quot;APP0011&quot;,&quot;APP0003&quot;,&quot;APP0010&quot;,&quot;APP0002&quot;,&quot;APP0013&quot;};
n=r.nextInt(alist.length);
appcode=alist[n];
vars.put(&quot;app_code&quot;,appcode);



String userCodeString=&quot;&quot;;
number = r.nextInt(49999);
DecimalFormat df = new DecimalFormat(&quot;00000&quot;);
number1=df.format(number);
userCodeString=&quot;perftest&quot;+number1+&quot;&quot;;

//userCodeString = userCodeString.substring(0, userCodeString.length() -1); 
vars.put(&quot;username&quot;,userCodeString);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="10%登录 " enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;0 &amp;&amp; ${percentage}&lt;=10,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="10%获取用户详情" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;10 &amp;&amp; ${percentage}&lt;=20,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="6%修改密码" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;20 &amp;&amp; ${percentage}&lt;=26,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="7%批量获取用户详情" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;26 &amp;&amp; ${percentage}&lt;=33,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="12%获取用户功能权限" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;33 &amp;&amp; ${percentage}&lt;=45,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="9%获取用户数据权限" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;45 &amp;&amp; ${percentage}&lt;=54,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="8%获取组织架构" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;54 &amp;&amp; ${percentage}&lt;=62,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="18%采集用户行为" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;62 &amp;&amp; ${percentage}&lt;=80,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="5%用户菜单偏好" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;80 &amp;&amp; ${percentage}&lt;=85,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="15%新增操作日志" enabled="false">
          <stringProp name="IfController.condition">${__groovy(${percentage}&gt;85 &amp;&amp; ${percentage}&lt;=100,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="false">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="influxdbMetricsSender" elementType="Argument">
                <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
                <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="influxdbUrl" elementType="Argument">
                <stringProp name="Argument.name">influxdbUrl</stringProp>
                <stringProp name="Argument.value">http://192.168.108.99:8086/write?db=telegraf</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="application" elementType="Argument">
                <stringProp name="Argument.name">application</stringProp>
                <stringProp name="Argument.value">infra</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="measurement" elementType="Argument">
                <stringProp name="Argument.name">measurement</stringProp>
                <stringProp name="Argument.value">jmeter</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="summaryOnly" elementType="Argument">
                <stringProp name="Argument.name">summaryOnly</stringProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="samplersRegex" elementType="Argument">
                <stringProp name="Argument.name">samplersRegex</stringProp>
                <stringProp name="Argument.value">.*</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="percentiles" elementType="Argument">
                <stringProp name="Argument.name">percentiles</stringProp>
                <stringProp name="Argument.value">99;95;90</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="testTitle" elementType="Argument">
                <stringProp name="Argument.name">testTitle</stringProp>
                <stringProp name="Argument.value">PT20181203-400user-mix</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="eventTags" elementType="Argument">
                <stringProp name="Argument.name">eventTags</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\test\Desktop\3000minx_noupdatepasswd</stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesDistributionGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Distribution" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">100</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TimesVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times vs Threads" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="只是监控" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\test\Downloads\apache-jmeter-5.0\bin\2000db.txt</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1918856201">
              <stringProp name="202218453">192.168.111.254</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-381858120">
              <stringProp name="202218453">192.168.111.254</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="277675171">
              <stringProp name="202218453">192.168.111.254</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1507151131">
              <stringProp name="202218453">192.168.111.254</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-269518104">
              <stringProp name="202218453">192.168.111.254</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\test\Desktop\2000mix_nopassword_8core_4G_db100</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
