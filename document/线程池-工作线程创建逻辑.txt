一、线程池工作线程创建流程
	1、如果当前工作线程（worker）线程数小于corePoolSize(核心线程)，直接创建工作线程（worker）（无论工作线程是否有空闲），并指定当前任务（task）为firstTask（创建核心线程说明任务队列肯定为空）。
	2、如果当前工作线程（worker）线程数大于等于corePoolSize
		2.1、先把任务（task/Runnable）放入任务队列（workQueue）（可能放入后就立即被worker消费了，也有可能放入失败（任务队列workQueue已满））
		2.2、如果2.1放入成功，检查是否需要创建普通工作线程（worker），如果需要则创建普通工作线程
		2.3、如2.1放入任务（task）到任务队列（workQueue）失败
			3.1、尝试创建工作线程（worker），如果创建失败则执行reject策略
	
二、线程池中工作线程（worker）通过直接调用任务（task）的run方法进行线程调用。因此，工作线程（worker）和任务（task）具有相同的ThreadLocal，所以使用完ThreadLocal需要在线程结束的时候销毁，否则会造成不同线程之间ThreadLocal数据错乱

三、线程池中没有规定那些线程为核心线程，在工作线程销毁过程中，剩下最后的就是核心线程

四、核心属性
	核心线程数、最大线程数、核心线程集合、任务队列集合（阻塞队列）、空闲线程保活时间、线程池状态